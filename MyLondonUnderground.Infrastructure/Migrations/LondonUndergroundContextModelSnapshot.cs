// <auto-generated />
using DotNetCoreToolKit.Library.Models.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using MyLondonUnderground.Domain.Model;
using MyLondonUnderground.Infrastructure.EntityFramework;
using System;

namespace MyLondonUnderground.Infrastructure.Migrations
{
    [DbContext(typeof(LondonUndergroundContext))]
    partial class LondonUndergroundContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("MyLondonUnderground.Domain.Model.TubeLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Colour");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("ObjectState");

                    b.Property<byte[]>("RowVersion");

                    b.HasKey("Id");

                    b.ToTable("TubeLines");
                });

            modelBuilder.Entity("MyLondonUnderground.Domain.Model.TubeLineStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("Deleted");

                    b.Property<bool>("HasNationalRailConnection");

                    b.Property<bool>("HasStepFreeAccessFromStreetToPlatform");

                    b.Property<bool>("HasStepFreeAccessFromStreetToTrain");

                    b.Property<string>("Name");

                    b.Property<int>("ObjectState");

                    b.Property<int>("Position");

                    b.Property<byte[]>("RowVersion");

                    b.HasKey("Id");

                    b.ToTable("TubeLineStations");
                });

            modelBuilder.Entity("MyLondonUnderground.Domain.Model.TubeLineToTubeLineStationMap", b =>
                {
                    b.Property<int>("TubeLineId");

                    b.Property<int>("TubeLineStationId");

                    b.HasKey("TubeLineId", "TubeLineStationId");

                    b.HasIndex("TubeLineStationId");

                    b.ToTable("TubeLineToTubeLineStationMap");
                });

            modelBuilder.Entity("MyLondonUnderground.Domain.Model.TubeLineToTubeLineStationMap", b =>
                {
                    b.HasOne("MyLondonUnderground.Domain.Model.TubeLine", "TubeLine")
                        .WithMany("TubeLineToTubeLineStationMaps")
                        .HasForeignKey("TubeLineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyLondonUnderground.Domain.Model.TubeLineStation", "TubeLineStation")
                        .WithMany("TubeLineToTubeLineStationMaps")
                        .HasForeignKey("TubeLineStationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
